   -- Демонстрация работы со строками, являющимимся аналогом
   -- одноуровневых списков
   --------------------------------------------
   -- Функция, возвращающая первый символ слова
   ------------------------------------------------
   atomCar word | null word = error "Пустая строка"
                | True      = head word
   ----------------------------------------------------
   -- Функция, возвращающая слово x без первого символа
   ----------------------------------------------------
   atomCdr word | null word = error "Пустая строка"
                | True      = tail word
   -- *****************************************************
   -- Функция, удаляющая последнюю букву данного слова word
   --------------------------------------------------------
   del_last_letter word | null word = error "Пустая строка"
                        | True      = init word
   -------------------------------------------------------
   -- Модель встроенной функции, удаляющей последнюю букву
   -- данного слова word 
   ---------------------------------------------------------
   del_last_letter1 word | null word = error "Пустая строка"
                         | True      = take (-1+length word) word
   --------------------------------------------------------------
   -- Модель встроенной функции (написанной в стиле LISP),
   -- удаляющей последнюю букву данного слова word 
   ---------------------------------------------------------
   del_last_letter2 word | null word = error "Пустая строка"
                         | True      = reverse 
                                          (tail (reverse word))
   -- *********************************************************
   -- Функция, возвращающая n-ю букву слова word 
   -- (нумерация букв начинается с 0)
   ---------------------------------------------------
   position n word | null word = error "Пустая строка"
                   | n>length word -1 || n<0
                               = error "Нет такой позиции в слове"
                   | True      = word !! n
   ---------------------------------------------------------
   -- Рекурсивная функция, моделирующая встроенную операцию, 
   -- возвращающую n-ю букву слова word (нумерация букв  на-
   -- чинается с 0)
   ----------------------------------------------
   nth n word | null word = error "Пустая строка"
              | n>(length word)-1 || n<0
                          = error "Нет такой позиции в слове"
              | n==0      = head word
              | True      = nth (n-1) (tail word)
   -- ******************************************************
   -- Функция, вставляющая букву x на n-ю позицию слова word
   -- (нумерация букв начинается с 0)
   ----------------------------------
   insert x n word | null word = x
                   | n>length word || n<0
                               = error "Нет такой позиции в слове"
                   | True      = take n word ++ x ++ drop n word
   -------------------------------------------------------------  
   -- Рекурсивная функция, вставляющая букву x на n-ю позицию 
   -- слова word (нумерация букв начинается с 0)
   ---------------------------------------------
   insert1 x n word | null word || n==0
                           = x ++ word
                    | n>length word || n<0
                           = error "Нет такой позиции в слове"
                    | True = head word : insert1 x (n-1) (tail word)
   -- **************************************************************
   -- Функция, удаляющая n-ю букву слова word
   ------------------------------------------
   delete n word | n>length word || n<0 
                        = word
                 | True = take n word ++ drop (n+1) word
   ------------------------------------------------------
   -- Функция, удаляющая n-ю букву слова word
   ------------------------------------------
   delete1 n word | n>length word || n<0 
                         = word
                  | n==0 = tail word  
                  | True = head word : delete1 (n-1) (tail word)
   -------------------------------------------------------------
   -- Неудачные тестовые примеры:
   --------------------------------------------------------------
   test = testAtomCar && testAtomCdr && testDelete_last_letter &&
          testDelete_last_letter1 && testDelete_last_letter2 &&
          testPosition && testNth && testInsert && testInsert1 && 
          testDelete && testDelete1
   -------------------------------------
   testAtomCar =   atomCar "rose" == 'r'
                && atomCar "@"    == '@'
   ---------------------------------------
   testAtomCdr =   atomCdr "rose" == "ose"
                && atomCdr "@"    == ""
   ----------------------------------------------------------
   testDelete_last_letter =   del_last_letter "rose" == "ros"
                           && del_last_letter "@"    == ""
   ------------------------------------------------------------
   testDelete_last_letter1 =   del_last_letter1 "rose" == "ros"
                            && del_last_letter1 "@"    == ""
   ------------------------------------------------------------
   testDelete_last_letter2 =   del_last_letter2 "rose" == "ros"
                            && del_last_letter2 "@"    == ""
   ---------------------------------------------------------
   testPosition =   position 0 "WORD" == 'W'
                 && position 3 "WORD" == 'D'
   -----------------------------------------
   testNth =   nth 0 "WORD" == 'W'
            && nth 3 "WORD" == 'D'
   -------------------------------------------
   testInsert =   insert "R" 0 "osa" == "Rosa"
               && insert "!" 3 "Osa" == "Osa!"
               && insert "?" 3 ""    == "?"
   ---------------------------------------------
   testInsert1 =   insert1 "R" 0 "osa" == "Rosa"
                && insert1 "!" 3 "Osa" == "Osa!"
                && insert1 "?" 3 ""    == "?"
   ------------------------------------------
   testDelete =   delete 0 "Rosa" == "osa"
               && delete 3 "Osa!" == "Osa"
               && delete 5 ""     == ""
               && delete 5 "abc"  == "abc"
   -----------------------------------------
   testDelete1 =   delete1 0 "Rosa" == "osa"
                && delete1 3 "Osa!" == "Osa"
                && delete1 5 ""     == ""
                && delete1 5 "abc"  == "abc"
