   -- Библиотека функций для моделирования:
   --   (1) операции подстановки на множестве слов в алфавите;
   --   (2) операции замены на множестве слов в алфавите;
   --   (3) вхождений слов в алфавите.
   --
   -- Авторы: И.А.Кудрявцева, М.В.Швецкий (2003, май)
   -- Реализация на языке Haskell: И.А. Кудрявцева (30.01.2010) 
   ------------------------------------------------------------
   module Subst
      (quan1, beg, fin, noInt1, first, end, quan,
       subst1, subst2, int3, int1, int2)
   where
   -----------------------------------------------------------
   -- Функция, определяющая количество вхождений слова  GAM  в
   -- слово ALF для случая, когда все вхождения не имеют общих
   -- вхождений букв алфавита
   ------------------------------
   quan1 gam alf | noInt1 gam alf 
                        = 0
                 | True = 1+quan1 gam 
                                  (end alf (first gam alf ++ gam))
   ---------------------------------------------------------------
   -- Предикат, устанавливающий тот факт, что слово ALF
   -- является началом слова BET
   -----------------------------------
   beg alf bet | length alf>length bet
                          = False
               | null alf = True
               | True     =    head alf==head bet
                            && beg (tail alf) (tail bet)
   -----------------------------------------------------
   -- Предикат, устанавливающий тот факт, что слово ALF
   -- является концом слова BET
   ---------------------------------------------
   fin alf bet = beg (reverse alf) (reverse bet) 
   -------------------------------------------------
   -- Предикат, устанавливающий отсутствие вхождения
   -- слова ALF в слово BET
   -----------------------------------
   noInt1 alf bet | null bet    = True
                  | beg alf bet = False
                  | otherwise   = noInt1 alf (tail bet)
   ------------------------------------------------------------
   -- Функция, возвращающая GAM1 - первое вхождение слова ALF в 
   -- слово BET=(GAM1,ALF,GAM2)
   ----------------------------------
   first alf bet | beg alf bet = ""
                 | otherwise   = head bet : first alf (tail bet)
   -------------------------------------------------------------
   -- Функция, возвращающая конец слова ALF с началом BET
   ------------------------------------------------------
   end alf bet | null bet  = alf
               | otherwise = end (tail alf) (tail bet)
   -- ************************************************
   -- Сопутствующие функции
   -- ************************************************
   -- Функция, определяющая количество вхождений слова
   -- GAM в слово ALF для случая, когда вхождения  мо-
   -- гут иметь общие вхождения букв алфавита
   ------------------------------------------
   quan gam alf | noInt1 gam alf
                       = 0
                | True = 1+quan gam (end alf 
                                         (first gam alf++[head gam]))
   ------------------------------------------------------------------
   -- Функция, определяющая операцию подстановки в слово ALF
   -- вместо слова GAM слова BET
   ----------------------------------------
   subst1 alf gam bet | null alf       = ""
                      | noInt1 gam alf = alf
                      | beg gam alf    = bet++subst1 (end alf gam)
                                                     gam bet
                      | True           = head alf : subst1 (tail alf)
                                                           gam bet
   ---------------------------------------------------------------
   -- Функция, определяющая операцию подстановки в слово ALF
   -- вместо k-го вхождения подслова GAM слова BET
   --------------------------------------------------
   subst2 alf gam bet k | quan gam alf<k
                               = alf
                        | True = int3 k gam alf++bet
                                 ++
                                 end alf (int3 k gam alf++gam)
   -----------------------------------------------------------
   -- Функция, возвращает начало слова BET до k-го вхождения
   -- слова ALF в слово BET для случая, когда все вхождения могут
   -- иметь общие вхождения букв алфавита
   --------------------------------------
   int3 k alf bet | k==1 && beg alf bet
                          = ""
                  | k/=1 && beg alf bet
                          = [head alf]++int3 (k-1) alf (tail bet)
                  | True  = head bet : int3 k alf (tail bet)
   ---------------------------------------------------------
   -- Функция, возвращает начало слова BET до k-го вхождения
   -- в него однобуквенного слова A
   ----------------------------------
   int1 k a bet | k==1 && head bet==a
                       = ""
                | k/=1 && head bet==a
                       = a : int1 (k-1) a (tail bet)
                | True = head bet : int1 k a (tail bet)
   ---------------------------------------------------------
   -- Функция, возвращает начало слова BET до k-го вхождения
   -- слова ALF в слово BET для случая, когда все  вхождения
   -- не имеют общих вхождений букв алфавита
   -----------------------------------------
   int2 k alf bet | k==1 && beg alf bet
                         = ""
                  | k==1 = first alf bet
                  | k/=1 && beg alf bet
                         = alf++int2 (k-1) alf (end bet alf)
                  | True = first alf bet++alf
                           ++int2 (k-1)
                                  alf (end bet (first alf bet++alf))
