   -- Демонстрация рекурсии с использованием  сопоставления
   -- с образцом на примере функции, возвращающей последний
   -- элемент одноуровневого списка
   --------------------------------
   last':: [a] -> a
   last' []      = error "Результат операции не определён"
   last' [x]     = x
   last' (x:lst) = last' lst

   -- ******************************************
   -- Функция, возвращающая список, образованный
   -- перестановкой соседних элементов списка. 
   -- Например:
   --   [1,2,3,4,5,6] -> [2,1,4,3,6,5]
   --   [1,2,3]       -> [2,1,3]
   -----------------------------
   lstRev:: [Int] -> [Int]
   lstRev []       = []
   lstRev [x]      = [x]
   lstRev (x:y:xs) = y : x : lstRev xs

   -- ********************************************
   -- Функция возвращает индекс в списке (1,2,...)
   -- заданного элемента списка
   ----------------------------
   abc x [] n    = 0
   abc x (y:ys) n | x==y = n+1
                  | True = abc x ys (n+1)

   -- ***************************
   -- Неудачные тестовые примеры:
   --------------------------------------------
   test1 =   last' [1]                      == 1
          && last' [1,2,3]                  == 3
          && last' [[-1],[-2,-3],[-20,3,4]] == [-20,3,4]
          && last' "abcd"                   == 'd'
   -------------------------------------------------
   test2 =   lstRev [1,2,33,4,5,6] == [2,1,4,33,6,5]
          && lstRev [2,3,4,5,6]    == [3,2,5,4,6]  
   test3 = abc 4 [1,2,3,4] 0 == 4
