    2ПРИЛОЖЕНИЕ 4.
    2Языки функционального программирования

   Приведём краткое описание некоторых языков функционального прог-
раммирования (по [Душкин,2007,с.496-502].

    21. 0  3Caml Light 0 и  3Objective Caml 0.  Как и Standard ML принадлежит к
семейству ML.  Objective Caml отличается от Caml Light, в основном,
поддержкой классического  объектно-ориентированного  программирова-
ния.  Objective Caml, также как и Standard ML, является строгим, но
имеет некоторую встроенную поддержку отложенных вычислений.

    22. 0  3Clean 0.  Функциональный язык,  специально предназначенный  для
параллельного и распределённого программирования. По синтаксису на-
поминает Haskell. Чистый. Использует отложенные вычисления.
   С компилятором  поставляется  набор  библиотек  (I/O libraries),
позволяющих программировать графический пользовательский  интерфейс
под Win32 или MacOS.

    23. 0  3Erlang 0.  Язык, разработанный компанией Ericsson, ориентирован
на сферу коммуникаций;  происходит от Пролога, хотя сейчас похож на
него  лишь  внешне.  Имеет лёгкий в освоении синтаксис,  богатейшую
библиотеку,  в том числе:  переносимый графический интерфейс, СУБД,
распределённые вычисления; причём всё это доступно бесплатно.
   Язык является параллельным изначально - возможность параллельной
работы  нескольких процессов и их взаимодействия заложена на уровне
синтаксиса. Недостаток:  компиляция в байт-код,  для которого нужен
"тяжёлый" и не слишком быстрый интерпретатор.

    24. 0  3Gofer 0  ( 3G 1Ood   3F 1or   3E 1quational  3R 1easoning 0).  Упрощённый диалект
языка Haskell.  Предназначен для обучения  основам  функционального
программирования.

    25. 0  3Haskell 0.  Один  из  самых  распространённых  нестрогих языков
функционального программирования.  Имеет очень развитую систему ти-
пизации.

    26. 3 Hope 0.  Маленький  язык  функционального  программирования  со
строгой системой полиморфной типизации, алгебраическими типами дан-
ных, сопоставлением с образцами и функциями высших порядков. В этом
языке впервые была реализована  стратегия  вычислений,  именующаяся
"вызов по образцу".
   Другая важная характеристика языка - чистота.
   Первая реализация языка Hope являлась  _ 1строгой . 0,  однако впоследс-
твии были созданы  _ 1ленивые . 0 вычисления.  Более того, в строгую реали-
зацию была  добавлена  специальная  синтаксическая  конструкция для
создания ленивых выражений.
   В отличие от языка Haskell, который в какой-то степени основан и
на идеях языка Hope, в последнем совершенно не важен порядок клозов
в определении функций, т.к. сопоставление с образцами осуществляет-
ся по технологии, когда из всех клозов независимо от их порядка вы-
бирается такой,  в котором образец наиболее "похож" на сопоставляе-
мые данные.

    27. 0  3ISWIM 0 ( 3I 1f you  3S 1ee  3W 1hat  3I 1  3M 1ean 0). Функциональный язык-прототип.
   Разработан Ландиным  (США)  в  60-х годах для демонстрации того,
каким может и должен быть язык функционального программирования.
   Вместе с  языком Ландин разработал и специальную виртуальную ма-
шину для исполнения программ на языке ISWIM.  Эта виртуальная маши-
на,  основанная на вызове по значению, получила название SECD-маши-
ны.  На синтаксисе языка ISWIM базируется синтаксис многих функцио-
нальных  языков.
   На синтаксис ISWIM похож синтаксис ML, особенно Caml.

    28. 0  3Lisp 0 ( 3L 1ist  3p 1rocessor 0). Считается первым функциональным языком
программирования.   Нетипизирован.   Содержит   массу  императивных
свойств, однако поощряет именно функциональный стиль программирова-
ния. При вычислениях использует вызов по значению.
   Наиболее распространён диалект Common Lisp, ушедший от принципов
функционального  программирования.  Язык  сложен в изучении,  имеет
очень непривычный синтаксис.
   Существует объектно-ориентированный диалект языка - CLOS.

    29. 0  3Miranda 0. Функциональный язык, разработанный Д.Тёрнером (США),
в качестве стандартного функционального языка,  использовавшего от-
ложенные вычисления. Имеет строгую полиморфную систему типов.
   Как и ML этот язык преподаётся во многих  университетах.
   Оказал большое влияние на разработчиков языка Haskell.

    210. 0  3ML 0 ( 1Meta Language 0).  Целое семейство строгих  функциональных
языков с развитой полиморфной системой типов и параметризуемыми мо-
дулями.  ML преподаётся во многих университетах мира  (в  некоторых
даже как первый язык программирования).

    211. 0  3Scheme 0. Один из многих диалектов языка Lisp, предназначенный
для  научных  исследований  в  области информатики.  При разработке
Scheme был сделан упор на элегантность и простоту языка.  Благодаря
этому язык получился намного меньше, чем базовая версия языка Lisp.
   Отличается простотой как самого языка, так и стандартной библио-
теки функций, хотя несколько проигрывает в универсальности.
   Кроме того,  здесь точнее соблюдаются  принципы  функционального
программирования.

    212. 0  3Standard  ML 0.  Один из первых типизированных языков функцио-
нального программирования.  Содержит некоторые императивные  свойс-
тва, такие как ссылки на изменяемые значения, и поэтому не является
чистым. При вычислениях использует вызов по значению.
   Очень интересная реализация модульности. Мощная полиморфная сис-
тема типов.
   Существует формальное  математическое определение синтаксиса,  а
также статической и динамической семантик языка.

    213. 0  3Рефал 0. Функциональный язык, разработанный в СССР в семидеся-
тых годах XX века.  В некоторых отношениях близок к Прологу. Эффек-
тивен для обработки сложных структур данных типа текстов на естест-
венном языке, XML и т.д.
   Эффективность обусловлена тем,  что Рефал является  единственным
языком,  использующим  1двунаправленные списки 0 - это позволяет сокра-
тить объём некоторых программ и ускорить их работу (за счёт отсутс-
твия необходимости в сборке мусора).
   Существует много документации на русском языке по языку; имеется
 1суперкомпилятор 0  -  система оптимизации программ на уровне исходных
текстов (т.е. фактически оптимизация алгоритма).
