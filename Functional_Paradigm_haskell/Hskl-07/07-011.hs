   -- Демонстрация сравнения эффективности по памяти 
   -- двух функций, реализованных с помощью свёрток
   -- *********************************************

   -- ============================================
   -- Реализация функции reverse для списка [1..n]
   -- с помощью функционала foldr
   ----------------------------------------
   reverseR = foldr (\x xs -> xs ++ [x]) []

   -- ============================================
   -- Реализация функции reverse для списка [1..n]
   -- с помощью функционала foldl
   ------------------------------
   reverseL  = foldl f e
       where f = \ys x -> x : ys
             e = []
   ------------------------
   -- Выполним рефакторинг: 
   --
   -- \ys x -> x : ys = \ys x -> (:) x ys =
   --                 = \ys x -> flip (:) ys x
   --                 = \ys -> flip (:) ys = flip (:)
   --------------------------------------------------
   reverseL' = foldl f e
       where f = flip (:)
             e = []

   -- ============================================
   -- Реализация функции reverse для списка [1..n]
   -- с помощью свёртки foldl' 
   -- (обратите внимание на функцию ($!))
   --------------------------------------
   reverseL'' = foldl' (flip (:)) []
       where foldl'           :: (a -> b -> a) -> a -> [b] -> a
             foldl' f a []     = a
             foldl' f a (x:xs) = (foldl' f $! f a x) xs

   -- ***************************
   -- Неудачные тестовые примеры:
   -----------------------------------------------------
   test1 = reverseR   [1..5318]  -- Число 5318 подобрано
                                 -- эмпирически...
   test2 = reverseL   [1..30000] -- Время: 1.20 secs
   test3 = reverseL'  [1..30000] -- Время: 1.08 secs
   test4 = reverseL'' [1..30000] -- Время: 1.41 secs
