    2ПРИЛОЖЕНИЕ 3.
    2Панель инструментов инструментального средства HUGS 98

                       2Основные кнопки панели
                            2инструментов
   На  _ 1панели инструментов . 0,  находящейся слева на главном диалоговом
окне, предоставлены кнопки, при помощи которых можно вызвать наибо-
лее часто используемые в процессе разработки  команды  (конечно,  с
точки зрения разработчиков ИС HUGS 98, а не с точки зрения програм-
миста).
   Приведём краткие описания всех  1кнопок 0 (их всего 14).

    21. 0  _ 1Загрузка модулей из внешних файлов . 0.
   Позволяет выбрать и открыть файл,  из которого  загружаются  все
модули, обнаруживаемые интерпретатором в этом файле.

    22. 0  _ 1Вызов менеджера модулей . 0.
   Менеджер модулей  позволяет  добавлять,  удалять и редактировать
загруженные в память инструментального средства программные модули.

    23. 0  _ 1Вырезать выделенный текст . 0.
   Стандартная функция редактирования текстов; удаляет из редактора
выделенный текст и помещает в буфер обмена операционной системы.

    24. 0  _ 1Скопировать выделенный текст в буфер обмена . 0.
   Стандартная функция редактирования текстов;  копирует выделенный
текст в буфер обмена операционной системы.

    25. 0  _ 1Вставить текст из буфера обмена . 0.
   Стандартная функция редактирования текстов; вставляет в редакти-
руемый текст содержимое буфера обмена операционной системы.

    26. 0  _ 1Очистить выделенный текст . 0.
   Стандартная функция редактирования текстов; Удаляет из редактора
выделенный текст, не помещая его в буфер обмена ОС.

    27. 0  _ 1Запустить внешний редактор текста . 0.
   Запускает внешний текстовый редактор,  зарегистрированный в опе-
рационной системе;  для ОС Windows при нажатии на эту кнопку запус-
кается стандартная программа Notepad.

    28. 0  _ 1Запуск на выполнение выражения  0< 1main 0> ..
   Исполняет функцию main в загруженных модулях (если она там обна-
ружена).  Если функция main не обнаружена ни в одном из загруженных
модулей, то выдаётся ошибка:  1ERROR - Undefined variable "main" 0.

    29. 0  _ 1Остановка исполнения программы . 0.
   Остановка выполнения любой запущенной функции; например, исполь-
зуется для прекращения "вычисления" бесконечного списка.

    210. 0  _ 1Перезагрузка всех файлов текущего проекта . 0.
   Выполняет перезагрузку  всех  файлов  с целью загрузить в память
интерпретатора все изменения, сделанные в коде проекта.

    211. 0  _ 1Установка параметров интерпретатора . 0.
   Вывод на  экран диалогового окна установки набора параметров ин-
терпретатора языка Haskell (см. далее).

    212. 0  _ 1Вывод на экран иерархии классов . 0.
   Отображение на экране иерархии классов текущего проекта,  предс-
тавленной в виде множества прямоугольников с названиями (классы)  и
связей между ними (отношениями наследования).

    213. 0  _ 1Вызов справки . 0.
   Выводит на экран стандартное диалоговое окно справочной информа-
ции.  Предполагается, что все справочные файлы присутствуют в ката-
логе,  где установлено инструментальное средство (эти файлы не вхо-
дят в стандартную поставку HUGS 98).

    214. 0  _ 1Выход из программы . 0.
   Выполняет выход из инструментального средства HUGS 98 в операци-
онную систему.

                      2Параметры интерпретатора
                               2HUGS 98
   Изменение настроек HUGS 98 возможно осуществить в диалоговом ок-
не,  открывающемся  при нажатии кнопки 11 ( _ 1установка параметров ин-
 _ 1терпретатора . 0).
   В верхней части окна находится набор  _ 1флагов . 0,  отвечающих за  тот
или иной параметр интерпретатора:
 ш1.1
    2s 0 - распечатывать количество редукций и ячеек памяти  после  вы-
полнения вычислений;
    2t 0 - распечатывать тип выражения после его вычисления;
    2f 0 - прерывать вычисление после первой ошибки;
    2g 0 - распечатывать количество ячеек памяти,  собранных  во  время
сборки мусора;
    2G 0 - генерация кода FFI для импортированных файлов (англ.  1Foreign
 1Function Interface 0 - спецификация определений  функций  во  внешних
модулях,  написанных  в том числе и на других языках программирова-
ния, для включения в модули языка Haskell);
    2l 0 -  по  умолчанию  рассматривать  исходные файлы как содержащие
" 1литературный код 0",  т.е. представление исходных кодов функций спе-
циальным  образом внутри обычного текста (например,  внутри научных
статей);
    2e 0 - предупреждать об ошибках в "литературном коде";
    2. 0 - распечатывать точки для визуализации процесса вычисления;
    2q 0 - ничего не распечатывать для визуализации процесса вычисления;
    2Q 0 - квалифицировать имена во время распечатки результатов;
    2w 0 - всегда показывать названия загруженных файлов;
    2k 0 - полностью показывать тип и описание ошибок, связанных с сор-
тами типов;
    2o 0 - позволять пересекаться экземплярам классов;
    2u 0 - использовать функцию show для отображения результатов;
    2i 0 - удалять импортированные файлы при загрузке новых;
    2A 0 - автоматически загружать файлы модулей при их изменениях;
    2m 0 - использовать множественную резолюцию экземпляров классов.

 ш1.2
   Активизация флага производится щелчком левой клавиши мыши по со-
ответствующему полю; снятие флага осуществляется аналогично.
   Приведём смысл   _ 1полей ввода в диалоговом окне . 0  и соответствующие
им ключи командной строки для установки этих параметров:
 ш1.0

    2Path 0 ( 1-P 0 -  1путь 0) - данное поле ввода используется  для  указания
списка путей в операционной системе,  где следует производить поиск
файлов,  если у таких файлов не указано абсолютное местоположение в
файловой системе.  В  этом  параметре  необходимо  указывать путь к
стандартному модулю Prelude, а также другие стандартные библиотеки;

    2Preprocessor filter 0 ( 1F 0 - 1 фильтр  препроцессора 0)  -  данное  поле
предназначено для команды вызова препроцессора,  позволяющего обра-
батывать некоторые входные файлы определённым образом перед их  ин-
терпретацией;

    2Editor 0 ( 1E 0  -   1редактор 0)  - поле для указания внешнего редактора,
который будет использоваться для редактирования модулей при  вызове
их  из инструментального средства.
   По умолчанию используется стандартный редактор  (в  операционной
системе Windows -  1Notepad 0);

    2Prompt string 0 ( 1p  0- 1 строка приглашения 0) - в это поле записывается
строка приглашения,  которая выводится интерпретатором при ожидании
команды.
   По умолчанию используется строка "%s",  содержащее  наименование
текущего модуля;

    2Repeat last expression string 0 ( 1r  0- 1 строка для повторения послед-
 1него выражения 0) - инструментальное средство HUGS 98 позволяет в вы-
ражениях  указывать  предыдущее проинтерпретированное выражение при
помощи специальной строки, указываемой в данном поле ввода.
   По умолчанию это "$$";

    2Set constraint  cutoff limit 0 ( 1c  0- 1 установка предела рассмотрения
 1ограничений 0) - в этом поле можно  указать  количество  ограничений,
которые просматриваются механизмом вывода типов HUGS 98.
   По умолчанию значение этого параметра, которое подходит для лю-
бых программ, равно 40;

    2Heap size 0 ( 1h  0- 1 размер кучи 0) - при помощи этого  параметра  можно
установить максимальный размер памяти, которая будет использоваться
интерпретатором для вывода значений выражений.  Число в  этом  поле
ввода характеризует количество ячеек (cells), которые обычно состо-
ят из восьми байтов.
   Память используется интерпретатором для чтения,  синтаксического
анализа и интерпретации модулей,  поэтому чем  больше  модуль,  тем
больше памяти необходимо выделить.

 ш1.2
    3Замечание 0 ( 1важное 0).
 ш1.1
   Перечисленные выше параметры инструментального средства HUGS  98
можно устанавливать  не  только  при помощи графического интерфейса
пользователя, но и при помощи параметров командной строки  при  за-
пуске интерпретатора:
 ш1.0

   [+|-]< 1Ключ 0>

   "+" - активизация флага (установка действия);
   "-" - сброс флага (отмена действия);
   < 1Ключ 0> - латинская буква в соответствующем регистре.

 ш1.2
    2Пример 0 [Душкин,2007,с.510].
 ш1.1
   Запуск интерпретатора с указанием следующего:
   (1) флаг перезагрузки модулей (i) должен быть сброшен;
   (2) флаг  распечатки собранных сборщиком мусора ячеек памяти (g)
должен быть установлен;
   (3) значение  переменной  " 1heap size 0" должно быть равным 30 000,
выглядит так:
 ш1.0

   hugs.exe -i +g +h30K
 ш1.2

                     2Дополнительные возможности
                        2для отладки программ
   Для детального  разбора  приложения,  созданного  программистом,
имеется  _ 1браузер для просмотра классов . 0, зарегистрированных имён объ-
ектов, конструкторов типов и иерархии классов.
   Интересующую информацию  можно распознать по применяемым в брау-
зере пиктограммам прямоугольного формата с определённой внутри бук-
вой на некотором фоне:
 ш1.1
   (1)  _ 1синий прямоугольник . 0 с буквой   2C 0  -  обозначение  класса  (от
англ.  1class 0);
   (2)  _ 1красный прямоугольник . 0 с буквой  2I 0  -  обозначение  экземпляра
класса (от англ.  1instance 0);
   (3)  _ 1розовый прямоугольник . 0 с буквой  2M 0 - обозначение функции-члена
класса (от англ.  1member 0);
   (4)  _ 1синий прямоугольник . 0 с буквой  2N 0 - обозначение  имени  функции
(от англ.  1name 0);
   (5)  _ 1красный прямоугольник . 0 с буквой  2P 0 - обозначение примитива.
   (6)  _ 1зелёный прямоугольник . 0 с буквой  2C 0 - обозначение  конструктора
типа (от англ.  1constructor 0);
   (7)  _ 1синий прямоугольник . 0 с буквой  2D 0 - обозначение типа данных (от
англ.  1data 0);
   (8)  _ 1красный прямоугольник . 0 с буквой  2S 0 -  обозначение  встроенного
типа;
   (9)  _ 1розовый прямоугольник . 0 с буквой  2N 0 - обозначение описания  но-
вого типа (от англ.  1new type 0).

 ш1.2
                21. 0  3Диалоговое окно просмотра классов
                         ( 1Browse Classes 0)
   С помощью данного браузера разработчик может изучить список соз-
данных  _ 1классов . 0,  список  _ 1функций-членов . 0  каждого  класса  (если  они
есть) и список  _ 1экземпляров . 0 каждого класса (если они есть).
    2Classes 0 - поле для представления списка созданных классов.
    2Members 0 - поле, в котором появляется список функций-членов клас-
са при выделении какого-то определённого класса в поле  2Classes 0.
    2Instances 0 - поле, предназначенное для отображения списка экземп-
ляров класса.
    2Superclasses 0 - поле, в котором появляются базовые классы для вы-
деленного класса (если они есть).
   Данное окно предоставляет возможность  автоматического  перехода
на  описание  выделенного  класса или выделенного экземпляра класса
для их редактирования (при  использовании  кнопок  < 1Edit  class 0>  и
< 1Edit instance 0> соответственно).  Кроме того, можно перейти к прос-
мотру иерархии классов при помощи кнопки < 1Hierarchy 0>.

               22. 0  3Диалоговое окно просмотра 0  3зарегист-
                      3рированных 0  3имён объектов
                          ( 1Browse Names 0)
   С помощью данного браузера разработчик может изучить список всех
 1имён 0, встречающихся во всех загруженных модулях. К  _ 1именам . 0 относятся
имена  функций,  имена примитивов (тех функций,  реализация которых
зашита внутри интерпретатора),  имена конструкторов данных и  имена
функций-членов классов.
    2Names 0 - поле для представления списка всех имён с  соответствую-
щей пиктограммой, обозначающей природу имени.
    2Search 0 - строка для ввода букв, по которым осуществляется инкре-
ментный поиск  имён  объектов по всему списку:  при вводе очередной
буквы курсор в списке перемещается на первое имя, которое начинает-
ся на введённую последовательность символов.
    2Type 0 - поле, отображающее тип объекта по его имени (если он при-
сутствует в списке).
    2Notes 0 - поле,  отображающее комментарии по поводу объекта  (если
они присутствуют в описании).
   Данное окно предоставляет разработчику возможность быстрого  пе-
рехода  к редактированию выделенного имени при нажатии кнопки < 1Edit
 1name 0>.
                    23. 3 Диалоговое окно просмотра
                         3конструкторов типов
                    ( 1Browse Type Constructors 0)
   С помощью данного браузера разработчик может изучить список всех
 1конструкторов 0, которые встречаются во всех загруженных модулях.
   К  _ 1конструкторам . 0 относятся конструкторы данных  (служебное  слово
 1data 0), описания встроенных типов (служебное слово  1type 0) и конструк-
торы новых типов (служебное слово  1newtype 0).
    2Types 0 - поле для представления списка  всех  имён  конструкторов
типов  с  соответствующей пиктограммой,  обозначающей природу конс-
труктора.
    2Search 0 - строка для ввода букв, по которым осуществляется инкре-
ментный поиск имён конструкторов типов по всему списку:  при  вводе
очередной буквы курсор в списке перемещается на первое имя, которое
начинается на введённую последовательность символов.
    2Type 0 - поле для представления определения соответствующего типа.
    2Constructors and selectors 0 - поле, предназначенное для отображе-
ния информации о конструкторах и селекторах выделенного типа.
    2Instances 0 - поле, предназначенное для отображения списка экземп-
ляров типа (если они есть).
   Данное окно предоставляет разработчику возможность быстрого  пе-
рехода к редактированию выделенного конструктора при нажатии кнопки
< 1Edit type 0> или к редактированию выделенного  экземпляра  типа  при
нажатии кнопки < 1Edit instance 0>.

                    24. 0  3Диалоговое окно просмотра
                          3иерархии классов
                            ( 1Hierarchy 0)
   В этом  браузере разработчик может не только просмотреть отноше-
ния наследования между созданными классами (иерархия классов  файла
Prelude.hs),  но  и  для  полного понимания ситуации разбросать все
классы по диалоговому окну, создав  _ 1планарный граф . 0.
