   -- Демонстрация функции, возвращающей вещественные корни
   -- квадратного уравнения, используя механизм  where  при
   -- описании локальных переменных.
   --  Используются:
   --  ++     - операция конкатенации (соединения) строк;
   --  show f - функция, преобразующая значение функции f
   --           в тип String
   -- **************************************
   roots:: Float -> Float -> Float -> String
   roots a b c | abs (discrim a b c) <= 0.00001
                      = "X=" ++ show (oneRoot a b c)
               | discrim a b c>0
                      = "X1="   ++ show f ++
                        ", X2=" ++ show s
               | True = "Вещественных корней нет"
         ----------------------------------------
         where discrim a b c = b^2-4.0*a*c
               oneRoot a b c = -b/(2.0*a)
               f = fst (twoRoots a b c)
               s = snd (twoRoots a b c)

   -- ****************************************
   -- Функция возвращает два корня квадратного
   -- уравнения с помощью механизма let..in 
   ---------------------------------------------------
   twoRoots:: Float -> Float -> Float -> (Float,Float)
   twoRoots a b c = let d = -b/(2.0*a)
                        e = sqrt(b^2-4.0*a*c)/(2.0*a)
                    in (d-e,d+e)

   -- ***************************
   -- Неудачные тестовые примеры:
   -------------------------------------
   test =   roots 1 (-8)  16  == "X=4.0"
         && roots 1   0 (-16) == "X1=-4.0, X2=4.0"
         && roots 4   2    1  == "Вещественных корней нет"
