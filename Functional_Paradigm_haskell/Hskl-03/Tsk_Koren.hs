   -- Демонстрация вычисления  ц и ф р о в о г о  корня из на-
   -- турального числа по следующему алгоритму: вначале вычис-
   -- ляется сумма цифр полученной суммы  и  т.д.  до тех пор,
   -- пока очередная сумма не станет однозначным числом.
   -- Цифровым корнем является полученный результат.
   --
   --  П р и м е р.  Вычислим цифровой корень 79868:
   --
   --  79868 => 7+9+8+6+8=38 => 3+8=11 => 1+1=2 => 2
   -- **********************************************
   import List

   -- ================================================
   -- Обратите внимание на две магические константы...
   ---------------------------------------------------
   d n | n < 10 = n
       | True   = d (d (n `div` 10) + n `mod` 10)

   -- ***************************
   -- Неудачные тестовые примеры:
   ---------------------------------------------
   test1 = d 79868                          == 2
   test2 = d 1111111111                     == 1
   test3 = d 11111111111111111111           == 2
   test4 = d 111111111111111111111111111111 == 3
   ------------------------------------------------
   -- Тестирование с использованием функционалов...
   ------------------------------------------------
   test5 = groupBy (\x y -> fst x == fst y) 
                   $ sort $ map (\x -> (d x, x))
                                [1..123]
   ----------------------------------------------------
   -- Вычисление всех натуральных чисел, меньших 50000,
   -- цифровой корень которых равен натуральному kor
   -------------------------------------------------
   test6 kor = filter (\x -> kor == d x)
                      [1..50000]
   test7 = map (\x -> (x, length $ test6 x))
               [1..9]
   -- Результат: [(1,5556),(2,5556),(3,5556),(4,5556),(5,5556),
   --                      (6,5555),(7,5555),(8,5555),(9,5555)]
