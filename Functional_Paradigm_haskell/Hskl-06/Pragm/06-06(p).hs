   import List
   -- *********************************************************
   --    Демонстрация решения задачи о максимальной подпоследо-
   -- вательности (англ. "maximum segment sum", mss). 
   --    На входе имеется массив из  n целых  чисел, на  выходе
   -- должна быть получена максимальная сумма любой непрерывной
   -- последовательности элементов массива. Если же все элемен-
   -- ты массива отрицательны, то на выходе должна  быть  сумма
   -- элементов пустой последовательности элементов, т.е. 0.
   --
   --   Тестовый пример: 
   --
   -- [31,-41,59,26,-53,58,97,-98,-23,84] => 187 для x[2..6]
   --
   --   Приведём реализацию алгоритма на императивном метаязыке:
   --
   --   m1=0; m2=0;
   --   for i=[0..n]
   --     m2=max(m2+x[i],0); m1=max(m1,m2)
   --
   -- ******************************************************
   -- Решения М.В.Швецкого (эффективность по времени O(n^3))
   ---------------------------------------------------------
   mss str = maximum $ map sum $ 
                        nub $ concatMap inits (tails str)
   ------------------------------------------------------
   mss' str = maximum $ map sum $ 
                        (nub . concat . map inits . tails) lst

   -- *******************************************************
   -- Решение R.Bird ("Introduction to Functional Programming
   --                  using Haskell", 1998, pp. 134-136)
   -- (эффективность по времени O(n))
   ---------------------------------------------------
   mss'' = maximum . scanr (\x -> \y -> max 0 (x+y)) 0

   -- ***************************
   -- Неудачные тестовые примеры:
   ------------------------------
   lst'' = [-5,3,4,5,-6,-1,4,5]
   lst'  = [31,-41,59,26,-53,58,97,-98,-23,84]
   lst   = [1..20] ++ [-20,-19..0] ++ [1..11]
   ------------------------------------------
   test1 = mss   lst
   test2 = mss'  lst
   test3 = mss'' lst
